// Code generated by MockGen. DO NOT EDIT.
// Source: client.go
//
// Generated by this command:
//
//	mockgen -destination=mock_test.go -package=otel_test -source=client.go
//

// Package otel_test is a generated GoMock package.
package otel_test

import (
	context "context"
	reflect "reflect"

	domain "github.com/natsoman/youtube-chat-reader/apps/finder/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
	isgomock struct{}
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ListLiveStreams mocks base method.
func (m *MockClient) ListLiveStreams(ctx context.Context, videoIDs []string) ([]domain.LiveStream, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLiveStreams", ctx, videoIDs)
	ret0, _ := ret[0].([]domain.LiveStream)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLiveStreams indicates an expected call of ListLiveStreams.
func (mr *MockClientMockRecorder) ListLiveStreams(ctx, videoIDs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLiveStreams", reflect.TypeOf((*MockClient)(nil).ListLiveStreams), ctx, videoIDs)
}

// SearchUpcomingLiveStream mocks base method.
func (m *MockClient) SearchUpcomingLiveStream(ctx context.Context, channelID string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchUpcomingLiveStream", ctx, channelID)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchUpcomingLiveStream indicates an expected call of SearchUpcomingLiveStream.
func (mr *MockClientMockRecorder) SearchUpcomingLiveStream(ctx, channelID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchUpcomingLiveStream", reflect.TypeOf((*MockClient)(nil).SearchUpcomingLiveStream), ctx, channelID)
}
